"use strict";(self.webpackChunkblog_sample=self.webpackChunkblog_sample||[]).push([[574],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8255:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],s={},l="Use Chrome devtools understanding **Closure** .",u={unversionedId:"JavaScript/Closure",id:"JavaScript/Closure",title:"Use Chrome devtools understanding **Closure** .",description:"Closure is a inside function in another function. The purpose of it is to creat a local scope witch won't effect the global or outside funtion.  In MDN there is a dtailed explanations",source:"@site/docs/JavaScript/Closure.md",sourceDirName:"JavaScript",slug:"/JavaScript/Closure",permalink:"/fr/docs/JavaScript/Closure",editUrl:"https://github.com/Malaaaa/blog-sample/tree/main/docs/JavaScript/Closure.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BasicSytax",permalink:"/fr/docs/JavaScript/BasicSytax"},next:{title:"Noter",permalink:"/fr/docs/LinuxConfigNote"}},p={},c=[],m={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-chrome-devtools-understanding-closure-"},"Use Chrome devtools understanding ",(0,a.kt)("strong",{parentName:"h1"},"Closure")," ."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Closure")," is a inside function in another function. The purpose of it is to creat a local scope witch won't effect the global or outside funtion.  In MDN ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"},"there is a dtailed explanations")),(0,a.kt)("p",null,"In development, the Closure is very useful but can also cause a lot of trouble. In react hooks, some state may lost because of it. But we can easily get it out by useing devtools and have a clear view of thr ",(0,a.kt)("strong",{parentName:"p"},"Closure"),"."),(0,a.kt)("p",null,"The following is a Clouser exmaple;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const testClosure = () => {\n  let num = 0;\n  const effect = () => {\n    num += 1;\n    const message = `num value in message\uff1a${num}`;\n    return function unmount() {\n      console.log(message);\n    };\n  };\n  return effect;\n};\nconst add = testClosure();\nconst unmount = add();\nadd();\nadd();\nadd();\nadd();\nunmount();\n")),(0,a.kt)("p",null,"If you are fimiliar with clourse you can easily get the the output "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"num value in message\uff1a1\n")),(0,a.kt)("p",null,"What was happened in this process? Use the devtool I can explain to you without any diffculty to understanding."),(0,a.kt)("p",null,"Just press ",(0,a.kt)("inlineCode",{parentName:"p"},"F12"),"and chose source to get the js function location "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"F:%5CGithub%5Cblog-sample%5Cdocs%5CJavaScript%5Cimg%5Cimage-20220324134517641.png",alt:"devtool"})),(0,a.kt)("p",null,"I used create react app to build this test project. So you can see at the sope area there is a Closure (./src/App.js) and we can see the only Global scope window. The Closure between them is index.js, and the top one also the deepest one is Closure (testClosure) in Clouser exmaple"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"F:%5CGithub%5Cblog-sample%5Cdocs%5CJavaScript%5Cimg%5Cscople.png",alt:"Scope"})),(0,a.kt)("p",null,"I put a break point at line 22,The first time we call ",(0,a.kt)("strong",{parentName:"p"},"testClosure"),"() , in the second deep Clouser. effect is an Anonymous Clouser in testClosure() and unmount() is a ",(0,a.kt)("strong",{parentName:"p"},"Clouser")," function with name 'unmount'."),(0,a.kt)("p",null,"!(F:\\Github\\blog-sample\\docs\\JavaScript\\img\\breakpoint.png)"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"F:%5CGithub%5Cblog-sample%5Cdocs%5CJavaScript%5Cimg%5Cbreakpoint.png",alt:"image-20220324141310209"})),(0,a.kt)("p",null,"From the picture, It is obvious the ",(0,a.kt)("inlineCode",{parentName:"p"},"const add")," is undifined before Assignment. That is  Hoisting but you can't use it, for ",(0,a.kt)("inlineCode",{parentName:"p"},"let")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," there will be an  ",(0,a.kt)("inlineCode",{parentName:"p"},"Throws ReferenceError")," you can see ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Glossary/Hoisting"},"MDN get more about hoisting")),(0,a.kt)("p",null,"Click next, step in testClosuer there is there attribute ","[this, effect, let]"," and their Hoisting value undefined."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"F:%5CGithub%5Cblog-sample%5Cdocs%5CJavaScript%5Cimg%5CtestClosure.png",alt:"image-20220324142854729"}),"  \t "),(0,a.kt)("p",null,"Just click next excute ",(0,a.kt)("inlineCode",{parentName:"p"},"const add = testClosure();")," and we can see the return value is a ",(0,a.kt)("strong",{parentName:"p"},"Anonymous")," Function named effect (this name attribute is given for locate the function) ."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"F:%5CGithub%5Cblog-sample%5Cdocs%5CJavaScript%5Cimg%5CreturnValue.png",alt:"image-20220324143430450"})),(0,a.kt)("p",null,"Continue click to excute ",(0,a.kt)("inlineCode",{parentName:"p"},"const unmount = add();")," and the return value is a ",(0,a.kt)("strong",{parentName:"p"},"unmount")," Function which is difined to log in console."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"F:%5CGithub%5Cblog-sample%5Cdocs%5CJavaScript%5Cimg%5Cunmount.png",alt:"image-20220324163932432"})),(0,a.kt)("p",null,"Here is why the result is ",(0,a.kt)("inlineCode",{parentName:"p"},"num value in message\uff1a1")," "),(0,a.kt)("p",null,'The unmount() is assigned a property {message:"num value in message:1"}.'),(0,a.kt)("p",null,"add() will change the num every call but don't excute ",(0,a.kt)("strong",{parentName:"p"},"unmount")," ",(0,a.kt)("strong",{parentName:"p"},"function")," so console have no output. But we can use ",(0,a.kt)("inlineCode",{parentName:"p"},"add()();"),"to get excute the inner function ",(0,a.kt)("inlineCode",{parentName:"p"},"num value in message\uff1a2"),". This is also about Currying ",(0,a.kt)("a",{parentName:"p",href:"https://javascript.info/currying-partials"},"click here know more about currying")))}d.isMDXComponent=!0}}]);