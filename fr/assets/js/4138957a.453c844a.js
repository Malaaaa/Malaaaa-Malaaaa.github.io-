"use strict";(self.webpackChunkblog_sample=self.webpackChunkblog_sample||[]).push([[603],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),m=l,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return t?a.createElement(f,r(r({ref:n},p),{},{components:t})):a.createElement(f,r({ref:n},p))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9817:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=t(7462),l=t(3366),i=(t(7294),t(3905)),r=["components"],o={},s=void 0,c={unversionedId:"CSAPP/Linking",id:"CSAPP/Linking",title:"Linking",description:"Traduit le programme d'exemple d'un fichier source ASCII en un fichier objet ex\xe9cutable.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/CSAPP/Linking.md",sourceDirName:"CSAPP",slug:"/CSAPP/Linking",permalink:"/fr/docs/CSAPP/Linking",editUrl:"https://github.com/Malaaaa/blog-sample/tree/main/docs/CSAPP/Linking.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flux de contr\xf4le exceptionnel",permalink:"/fr/docs/CSAPP/Exceptional Control Flow"},next:{title:"Network",permalink:"/fr/docs/CSAPP/Network"}},p=[{value:"Traduit le programme d&#39;exemple d&#39;un fichier source ASCII en un fichier objet ex\xe9cutable.",id:"traduit-le-programme-dexemple-dun-fichier-source-ascii-en-un-fichier-objet-ex\xe9cutable",children:[],level:3},{value:"Fichiers objet",id:"fichiers-objet",children:[{value:"Symboles",id:"symboles",children:[{value:"Comment les \xe9diteurs de liens r\xe9solvent les noms de symboles en double",id:"comment-les-\xe9diteurs-de-liens-r\xe9solvent-les-noms-de-symboles-en-double",children:[],level:6}],level:4},{value:"D\xe9m\xe9nagement",id:"d\xe9m\xe9nagement",children:[{value:"entr\xe9es de relocalisation d&#39;objdump",id:"entr\xe9es-de-relocalisation-dobjdump",children:[],level:6}],level:4},{value:"Fichiers objet ex\xe9cutables",id:"fichiers-objet-ex\xe9cutables",children:[],level:4},{value:"Chargement de fichiers d&#39;objets ex\xe9cutables",id:"chargement-de-fichiers-dobjets-ex\xe9cutables",children:[],level:4},{value:"Liaison statique",id:"liaison-statique",children:[],level:4},{value:"Liaison dynamique",id:"liaison-dynamique",children:[{value:"L&#39;\xe9diteur de liens dynamique termine ensuite la t\xe2che de liaison en effectuant les d\xe9placements suivants\xa0:",id:"l\xe9diteur-de-liens-dynamique-termine-ensuite-la-t\xe2che-de-liaison-en-effectuant-les-d\xe9placements-suivants",children:[],level:5},{value:"Le Dynamic Linking est une technique puissante et utile :",id:"le-dynamic-linking-est-une-technique-puissante-et-utile-",children:[],level:5}],level:4},{value:"Code ind\xe9pendant de la position (PIC)",id:"code-ind\xe9pendant-de-la-position-pic",children:[],level:4},{value:"Interposition de biblioth\xe8que",id:"interposition-de-biblioth\xe8que",children:[{value:"1. Interposition au moment de la compilation",id:"1-interposition-au-moment-de-la-compilation",children:[],level:5},{value:"2. Interposition de temps de liaison",id:"2-interposition-de-temps-de-liaison",children:[],level:5},{value:"3. Interposition d&#39;ex\xe9cution",id:"3-interposition-dex\xe9cution",children:[],level:5}],level:4}],level:3}],u={toc:p};function d(e){var n=e.components,o=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"traduit-le-programme-dexemple-dun-fichier-source-ascii-en-un-fichier-objet-ex\xe9cutable"},"Traduit le programme d'exemple d'un fichier source ASCII en un fichier objet ex\xe9cutable."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img_6.png",src:t(5626).Z,width:"554",height:"141"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Pr\xe9processeur C\xa0: cpp ","[autres arguments]"," hello.c /tmp/main.i"),(0,i.kt)("li",{parentName:"ol"},"Compilateur C\xa0: cc1 /tmp/hello.i -Og ","[autres arguments]"," -o /tmp/hello.s"),(0,i.kt)("li",{parentName:"ol"},"assembleur : as ","[autres arguments]"," -o /tmp/hello.o /tmp/hello.s"),(0,i.kt)("li",{parentName:"ol"},"programme de liaison\xa0: ld -o hello ","[fichiers d'objet syst\xe8me et arguments]"," /tmp/hello.o /libc.a/printf.o"),(0,i.kt)("li",{parentName:"ol"},"programme ex\xe9cutable : linux> ./hello")),(0,i.kt)("h3",{id:"fichiers-objet"},"Fichiers objet"),(0,i.kt)("p",null,"Format ex\xe9cutable et connectable (ELF). ",(0,i.kt)("img",{alt:"img_3.png",src:t(9915).Z,width:"824",height:"684"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".text Le code machine du programme compil\xe9.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".rodata ",(0,i.kt)("strong",{parentName:"p"},"Donn\xe9es en lecture seule")," telles que les cha\xeenes de format dans les instructions printf et tables de sauts pour les instructions switch.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".data Variables C globales et statiques initialis\xe9es. Les variables C locales sont maintenues \xe0 au moment de l'ex\xe9cution sur la pile et n'apparaissent ni dans les sections .data ni .bss .")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".bss Variables C globales et statiques non initialis\xe9es, ainsi que toutes les variables globales ou statiques initialis\xe9es \xe0 z\xe9ro. Aucun espace n'a les m\xeames adresses avec .comment.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".symtab Une table de symboles avec des informations sur les fonctions et les variables globales qui sont d\xe9finies et r\xe9f\xe9renc\xe9es dans le programme.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".rel Informations de relocalisation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".line Un mappage des num\xe9ros de ligne")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},".strtab Une table de cha\xeenes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fichier objet d\xe9pla\xe7able. Contient du code binaire et des donn\xe9es sous une forme qui peut \xeatre combin\xe9e avec d'autres fichiers objets r\xe9adressables au moment de la compilation pour cr\xe9er un fichier objet ex\xe9cutable.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fichier objet ex\xe9cutable. Contient du code binaire et des donn\xe9es sous une forme qui peut \xeatre copi\xe9e directement dans la m\xe9moire et ex\xe9cut\xe9e. ",(0,i.kt)("img",{alt:"img_2.png",src:t(1739).Z,width:"1236",height:"694"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fichier objet partag\xe9. Un type sp\xe9cial de fichier objet relocalisable qui peut \xeatre charg\xe9 en m\xe9moire et li\xe9 dynamiquement, au moment du chargement ou de l'ex\xe9cution."))),(0,i.kt)("h4",{id:"symboles"},"Symboles"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Symboles globaux d\xe9finis par le module m et pouvant \xeatre r\xe9f\xe9renc\xe9s par autres modules. OU r\xe9f\xe9renc\xe9 par le module m mais d\xe9fini par un autre module ."),(0,i.kt)("li",{parentName:"ul"},"Symboles locaux d\xe9finis et r\xe9f\xe9renc\xe9s exclusivement par le module m.")),(0,i.kt)("h6",{id:"comment-les-\xe9diteurs-de-liens-r\xe9solvent-les-noms-de-symboles-en-double"},"Comment les \xe9diteurs de liens r\xe9solvent les noms de symboles en double"),(0,i.kt)("p",null,"symboles forts : int i = 1 ; symboles faibles\xa0: int i\xa0; int principal(i =1); int ",(0,i.kt)("strong",{parentName:"p"},"attribut"),"((faible)) power2(int x);int power2(int x) ",(0,i.kt)("strong",{parentName:"p"},"attribut"),"((faible));extern int ",(0,i.kt)("strong",{parentName:"p"},"attribut"),"((faible)) global_var; R\xe8gle 1. Plusieurs symboles forts portant le m\xeame nom ne sont pas autoris\xe9s. R\xe8gle 2. \xc9tant donn\xe9 un symbole fort et plusieurs symboles faibles portant le m\xeame nom, choisit le symbole fort. R\xe8gle 3. \xc9tant donn\xe9 plusieurs symboles faibles portant le m\xeame nom, choisissez l'un des symboles faibles."),(0,i.kt)("h4",{id:"d\xe9m\xe9nagement"},"D\xe9m\xe9nagement"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"D\xe9placement des sections et des d\xe9finitions de symboles. Dans cette \xe9tape, l'\xe9diteur de liens fusionne toutes les sections du m\xeame type dans une nouvelle section agr\xe9g\xe9e du m\xeame type.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"D\xe9placement des r\xe9f\xe9rences de symboles dans les sections. Dans cette \xe9tape, l'\xe9diteur de liens modifie chaque r\xe9f\xe9rence de symbole dans les corps des sections de code et de donn\xe9es afin qu'ils vers les adresses d'ex\xe9cution correctes."))),(0,i.kt)("p",null,"Les entr\xe9es de relocalisation pour le code sont plac\xe9es dans .rel.text. Les entr\xe9es de relocalisation pour les donn\xe9es sont plac\xe9es dans .rel.data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/*main.c*/\nvoid swap();\nint buf[2] = {1, 2};\nint main() {\n    swap();\n    retour 0\xa0;\n}\n/*swap.c*/\nextern int buf [] ;\nint *bufp0 = &buf[0] ;\nentier *bufp1\xa0;\nvoid swap() {\n    int temp;\n    bufp1 = &buf[1];\n    temp =*bufp0;\n    *bufp0 = *bufp1\xa0;\n    *bufp1 = temp;\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"malaaa@malaaa-N8xxEP6> gcc -c swap.c -o swap.o//Fichier objet r\xe9adressable\nmalaaa@malaaa-N8xxEP6> gcc -c main.c -o main.o//Fichier objet r\xe9adressable\nmalaaa@malaaa- N8xxEP6> gcc -g swap.o main.o -o run//Fichier objet ex\xe9cutable\nmalaaa@malaaa-N8xxEP6> readelf -s swap.o\nmalaaa@malaaa-N8xxEP6> readelf -s main.o\n")),(0,i.kt)("p",null,"R\xe9sultat"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"swap.o\nLa table de symboles '.symtab' contient 14 entr\xe9es :\n   Num : Valeur Taille Type Bind Vis Ndx Name\n     0 : 0000000000000000 0 NOTYPE LOCAL DEFAULT UND \n     1 : 0000000000000000 0 FILE LOCAL DEFAULT ABS swap.c\n     2 : 0000000000000000 0000000 0000000000000000 Section locale 1 \n     3: 0000000000000000 0 Section Local 3 \n     4: 0000000000000000 0 Section Local local 4 \n     5: 0000000000000000 0 section locale 5 \n     6: 0000000000000000 0 Section Local local 8 \n     7: 0000000000000000 0 Section Local local 9 \n     8: 000000000000000000 0 section locale 10 \n     9: 0000000000000000 0 Section Local Par d\xe9faut 7 \n    10: 0000000000000000 0 VOCAL GLOBAL 5 BUFP0\n    11: 0000000000000000 0 NOTYPE GLOBAL DEFAULT UND BUF\n    12: 0000000000000000 8 Objet Global Par d\xe9faut 4 BUFP1\n    13: 0000000000000000 67 FUNC GLOBAL DEFAULT 1 \xe9change\n")),(0,i.kt)("p",null,"buf, \u662f swap.o.symtable \u7684 \u6761 \u76ee, extern \u7684 \u7b26\u53f7,",(0,i.kt)("strong",{parentName:"p"},"\u5728 Main.O \u4e2d \u5b9a\u4e49!"),", \u4eec\u4eec \u770b\u5230 \u4e00\u4e2a \u5173\u4e8e \u5168\u5c40 \u662f \u4ece \u7684 \u6761 \u76ee, \u5b83 \u4ece .Data \u4e2d \u504f\u79fb \u4e3a 0 \u5904\u5f00\u59cb\u7684\u4e00\u4e2a 8 \u5b57\u8282\u7684\u5df2\u521d\u59cb\u5316\u76ee\u6807. \\ bufp0\uff1a\u662f swap.o.symtable \u7684 \u6761 \u76ee, global \u7c7b\u578b \u7b26\u53f7, \u5728 Swap.o \u4e2d \u5b9a\u4e49, \u4eec \u770b\u5230 \u4e00\u4e2a \u5173\u4e8e\u5173\u4e8e \u4eec Bufpo \u7684 \u6761\u6761 \u5b83 \u662f \u4ece .Data \u4e2d \u504f\u79fb \u4e3a 0 \u5904 \u7684 \u4e00\u4e2a8 \u7684 \u5df2 \u521d \u59cb\u5316 \u76ee\u6807 \u76ee\u6807 bufp1\uff1a\u662f swap.o.symtabl \u7684 \u6761 \u76ee, global \u7684 \u7b26\u53f7, \u5728 Swap.o \u4e2d \u5b9a\u4e49, \u5b83 \u7684 8 \u5b57\u8282 \u6570\u636e \u76ee\u6807 \u521d \u7684 8 \u5b57\u8282 \u6570\u636e \u76ee\u6807 \u521d \u7684 8 \u5b57\u8282 \u6570\u636e (\u8981\u6c42 8 \u5b57\u8282),\u6700\u7ec8\u5f53\u8fd9\u4e2a\u6a21\u5757\u88ab\u94fe\u63a5\u65f6\u5b83\u5c06\u4f5c\u4e3a\u4e00\u4e2a.bss\u76ee\u6807\u5206\u914d\\ \xe9change\uff1a\u662fswap.o.symTable\u7684\u6761\u76ee, func\u7c7b\u578b\u7684\u7b26\u53f7,\u5728\u4e2d\u5b9a\u4e49swap.o,\u5b83\u662f\u4e00\u4e2a\u4f4d\u4e8e.text\u4e2d\u504f\u79fb\u4e3a\u96f6\u5904\u7684 67 \u5b57\u8282\u7684\u51fd\u6570\u3002 \\ temp\uff1a\u4e0d\u5c5e\u4e8eswap.o.symTable\u6761\u76ee\uff0cint\u7c7b\u578b\u7684\u7b26\u53f7\uff0c\u5728swap.o\u4e2d\u5b9a\u4e49\uff0c\u5c40\u90e8\u53d8\u91cf\u4f4d\u4e0e\u6808\u4f4d\u4e8e\u6808\u4f4d\u4e0e\u6808"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"main.o\nLa table des symboles '.symtab' contient 13 entr\xe9es :\nNum : Valeur Taille Type Bind Vis Ndx Nom\n0\xa0: 0000000000000000 0 NOTYPE LOCAL DEFAULT UND\n1\xa0: 0000000000000000 0 FILE LOCAL DEFAULT ABS main.c\n2\xa0: 0000000000000000 0 Section Local Local Par d\xe9faut 1\n3: 0000000000000000 0 Section Local local\n\n4: 0000000000000000 0 Section Local Local Par d\xe9faut 6\n6: 0000000000000000 0 Section Local local 7\n7: 0000000000000000 0 Section Local Local 8\n8: 0000000000000000 0 section locale 5\n9: 0000000000000000 8 Global d'objet Par d\xe9faut 3 buf\n10: 0000000000000000 25 FUNC GLOBAL 1 MAIN\n11: 0000000000000000 0 NOTYPEL GLOBAL DEFAULT UND _GLOBAL_OFFSET_TABLE_\n12: 00000000000000 0 NOTYPE GLOBAL DEFAULT UND SWAP\n\n")),(0,i.kt)("p",null,"buf \u662f\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4e00\u4e2a\u4f4d\u4e8e.data\u8282\u4e2d\u504f\u79fb\u4f4d0\u76848\u5b57\u8282\u76ee\u6807\u3002 \\ main \u4f4d\u4e8e.text\u8282\u4e2d\u504f\u79fb\u4e3a0\u768425\u5b57\u5b57"),(0,i.kt)("h6",{id:"entr\xe9es-de-relocalisation-dobjdump"},"entr\xe9es de relocalisation d'objdump"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"objdump -D -r swap.o")," -d just .text R\xe9sultat"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"swap.o: format de fichier elf64-x86-64\n\n\nD\xe9sassemblage de la section .text:\n\n0000000000000000 <swap>\xa0:\n   0: f3 0f 1e fa endbr64 \n   4: 55 push %rbp\n   5: 48 89 e5 mov %rsp,%rbp\n   8: 48 8d 05 00 00 00 00 lea 0x0(%rip),%rax # f <swap+0xf>\n            b: R_X86_64_PC32 buf\n   f: 48 89 05 00 00 00 00 mov %rax,0x0(%rip) # 16 <swap+0x16>\n            12 : R_X86_64_PC32 bufp1-0x4\n  16: 48 8b 05 00 00 00 00 mov 0x0(%rip),%rax # 1d <swap+0x1d>\n            19: R_X86_64_PC32 bufp0-0x4\n  1d: 8b 00 mov (%rax),%eax\n  1f: 89 45 fc mov    %eax,-0x4(%rbp)\n  22: 48 8b 15 00 00 00 00 mov 0x0(%rip),%rdx # 29 <swap+0x29>\n            25: R_X86_64_PC32 bufp1-0x4\n  29: 48 8b 05 00 00 00 00 mov 0x0(%rip),%rax # 30 <swap+0x30>\n            2c: R_X86_64_PC32 bufp0-0x4\n  30: 8b 12 mov (%rdx),%edx\n  32: 89 10 mov    %edx,(%rax)\n  34: 48 8b 05 00 00 00 00 mov 0x0(%rip),%rax # 3b <swap+0x3b>\n            37: R_X86_64_PC32 bufp1-0x4\n  3b: 8b 55 fc mov -0x4(%rbp),%edx\n  3e: 89 10 mov    %edx ,(%rax)\n  40\xa0: 90 nop\n  41\xa0: 5d pop %rbp\n  42\xa0: c3 retq   \n\nD\xe9montage de la section .bss\xa0:\n\n0000000000000000 <bufp1>\xa0:\n...\n\nD\xe9montage de la section .data.rel :\n\n0000000000000000 <bufp0>\xa0:\n...\n            0 : R_X86_64_64 buf\n\nD\xe9montage de section .comment :\n\n0000000000000000 <.comment>\xa0:\n   0\xa0: 00 47 43 add    %al,0x43(%rdi)\n   3\xa0: 43 3a 20 rex.XB cmp (%r8),%spl\n   6\xa0: 28 55 62 sub    %dl,0x62(%rbp)\n   9\xa0: 75 6e jne 79 <swap+0x79>\n   b\xa0: 74 75 je 82 <swap+0x82>\n   d\xa0: 20 31 et    %dh,(%rcx)\n   f\xa0: 30 2e xor    %ch,(%rsi)\n  11\xa0: 32 2e xor (%rsi),%ch\n  13\xa0: 30 2d 31 33 75 62 xor    %ch,0x62753331(%rip) # 6275334a <swap+0x6275334a>\n  19\xa0: 75 6e jne 89 <swap+0x89>\n  1b\xa0: 74 75 je 92 <swap+0x92>\n  1d\xa0: 31 29 xor    %ebp,(%rcx)\n  1f\xa0: 20 31 et    %dh,(%rcx)\n  21\xa0: 30 2e xor    %ch,(%rsi)\n  23\xa0: 32 2e xor (%rsi),%ch\n  25\xa0:\xa030\n   >%al,(%\n\n)\n\n <de la section $0x0,%al\n   2\xa0: 00 00 ajouter    %al,(%rax)\n   4\xa0: 10 00 adc    %al,(%rax)\n   6\xa0: 00 00 ajouter    %al,(%rax)\n   8\xa0: 05 00 00 00 47 ajouter $0x47000000,%eax\n   d\xa0: 4e 55 rex.WRX push %rbp\n   f\xa0: 00 02 ajouter    %al,(%rdx)\n  11\xa0: 00 00 ajouter    %al,(%rax)\n  13\xa0: c0 04 00 00 rolb $0x0,(%rax,%rax,1)\n  17: 00 03 ajouter    %al,(%rbx)\n  19: 00 00 ajouter    %al,(%rax)\n  1b\xa0: 00 00 ajouter    %al,(%rax)\n  1d\xa0: 00 00 ajouter    %al,(%rax)\n...\n\nD\xe9montage de la section .eh_frame\xa0:\n\n0000000000000000 <.eh_frame>\xa0:\n   0\xa0: 14 00 adc $0x0,%al\n   2\xa0: 00 00 add    %al,(%rax)\n   4\xa0: 00 00 add    %al,(%rax)\n   6\xa0: 00 00 ajouter    %al,(%rax)\n   8\xa0: 01 7a 52 ajouter    %edi,0x52(%rdx)\n   b\xa0: 00 01 ajouter    %al,(%rcx)\n   d\xa0: 78 10 js 1f <. eh_frame+0x1f>\n   f\xa0: 01 1b ajouter    %ebx,(%rbx)\n  11\xa0: 0c 07 ou $0x7,%al\n  13\xa0: 08 90 01 00 00 1c ou     %dl,0x1c000001(%rax)\n  19\xa0: 00 00 ajouter    %al,(%rax)\n  1b\xa0: 00 1c 00 ajouter    %bl,(%rax,%rax,1)\n  1e\xa0: 00 00 ajouter    %al,(%rax)\n  20\xa0: 00 00 ajouter    %al, (%rax)\n            20\xa0: R_X86_64_PC32 .text\n  22\xa0: 00 00 ajouter    %al,(%rax)\n  24\xa0: 43 00 00 rex.XB ajouter %al,(%r8)\n  27\xa0: 00 00 ajouter    %al,( %rax)\n  29\xa0: 45 0e rex.RB (mauvais) \n  2b\xa0: 10 86 02 43 0d 06 adc    %al,0x60d4302(%rsi)\n  31\xa0: 7a 0c jp 3f <swap+0x3f>\n  33\xa0: 07 (mauvais)  \n  34\xa0: 08 00 ou     %al,(%rax)\n...\n")),(0,i.kt)("h4",{id:"fichiers-objet-ex\xe9cutables"},"Fichiers objet ex\xe9cutables"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img_4.png",src:t(2866).Z,width:"1310",height:"680"})," Table d'en-t\xeate de programme ",(0,i.kt)("strong",{parentName:"p"},"Lecture seule")),(0,i.kt)("h4",{id:"chargement-de-fichiers-dobjets-ex\xe9cutables"},"Chargement de fichiers d'objets ex\xe9cutables"),(0,i.kt)("p",null,"Le chargeur **** copie le code et les donn\xe9es du fichier objet ex\xe9cutable du disque dans la m\xe9moire, puis ex\xe9cute le programme en sautant \xe0 sa premi\xe8re instruction, ou point d'entr\xe9e. \\ Le segment de code commence \xe0 l'adresse 0x400000, \u5bf9\u4e8e Linux \u800c, 0x400000 \u7684 \u7a7a\u95f4 \u9ed8\u8ba4 \u7a0b\u5e8f \u7684 \u4f5c\u7528. \u8d77\u5230 \u4fdd\u62a4 \u7a0b\u5e8f \u7684 \u4f5c\u7528. \u8d77\u5230 \u4fdd\u62a4 \u7a0b\u5e8f \u5b89\u5168 \u7a0b\u5e8f \u7a0b\u5e8f \u5b89\u5168 \u64cd\u4f5c \u7cfb\u7edf \u4fdd\u8bc1 \u56e0\u6b64 \u5927 \u9650\u5ea6 \u5229\u7528\\ le segment de donn\xe9es.\\ le tas.\\ le r\xe9serv\xe9 aux modules partag\xe9s.\\ la pile utilisateur. en dessous de la plus grande adresse utilisateur l\xe9gale (2 48 \u2212 1) et cro\xeet vers le bas, vers des adresses m\xe9moire plus petites.\\ la partie kernel.memory-resident du syst\xe8me d'exploitation."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img_5.png",src:t(1918).Z,width:"1014",height:"940"})),(0,i.kt)("h4",{id:"liaison-statique"},"Liaison statique"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Symbol resolution.symbol\xa0: une fonction, une variable globale ou une variable statique (le mod\xe8le 'main(int i = 0)' est une instruction)"),(0,i.kt)("li",{parentName:"ul"},"Relocation.Les compilateurs et les assembleurs g\xe9n\xe8rent des sections de code et de donn\xe9es qui commencent \xe0 l'adresse 0.")),(0,i.kt)("h4",{id:"liaison-dynamique"},"Liaison dynamique"),(0,i.kt)("p",null,"Une biblioth\xe8que partag\xe9e __ est un module objet qui, au moment de l'ex\xe9cution ou du chargement , peut \xeatre charg\xe9 \xe0 une adresse m\xe9moire arbitraire et li\xe9 \xe0 un programme en m\xe9moire . \\ Les syst\xe8mes Linux sont indiqu\xe9s par le suffixe .so. Les syst\xe8mes d'exploitation Microsoft font un usage intensif des biblioth\xe8ques partag\xe9es, qu'ils appellent DLL."),(0,i.kt)("p",null,"Les biblioth\xe8ques partag\xe9es sont \xab partag\xe9es \xbb de deux mani\xe8res diff\xe9rentes."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"exactement un fichier .so pour une biblioth\xe8que particuli\xe8re. Le code et les donn\xe9es sont partag\xe9s par tous les fichiers objets ex\xe9cutables qui r\xe9f\xe9rencent la biblioth\xe8que,"),(0,i.kt)("li",{parentName:"ol"},"La section .text en m\xe9moire peut \xeatre partag\xe9e par diff\xe9rents processus en cours d'ex\xe9cution. ",(0,i.kt)("img",{alt:"img_7.png",src:t(2686).Z,width:"1032",height:"866"}))),(0,i.kt)("h5",{id:"l\xe9diteur-de-liens-dynamique-termine-ensuite-la-t\xe2che-de-liaison-en-effectuant-les-d\xe9placements-suivants"},"L'\xe9diteur de liens dynamique termine ensuite la t\xe2che de liaison en effectuant les d\xe9placements suivants\xa0:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"D\xe9placer le texte et les donn\xe9es de libc.so dans un segment de m\xe9moire"),(0,i.kt)("li",{parentName:"ul"},"D\xe9placer le texte et les donn\xe9es de libvector.so dans un autre segment de m\xe9moire"),(0,i.kt)("li",{parentName:"ul"},"D\xe9placer toutes les r\xe9f\xe9rences dans prog2l vers les symboles d\xe9finis par libc.so et libvector.so")),(0,i.kt)("h5",{id:"le-dynamic-linking-est-une-technique-puissante-et-utile-"},"Le Dynamic Linking est une technique puissante et utile :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Distribution de logiciels. utiliser des biblioth\xe8ques partag\xe9es pour distribuer les mises \xe0 jour logicielles."),(0,i.kt)("li",{parentName:"ul"},"Construire des serveurs Web performants. g\xe9n\xe9rer du contenu dynamique en utilisant une approche plus efficace et sophistiqu\xe9e bas\xe9e sur la liaison dynamique . les requ\xeates ult\xe9rieures peuvent \xeatre trait\xe9es au prix d'un simple appel de fonction. fonctions existantes peuvent \xeatre mises \xe0 jour et de nouvelles fonctions peuvent \xeatre ajout\xe9es au moment de l'ex\xe9cution, sans arr\xeater le serveur.")),(0,i.kt)("h4",{id:"code-ind\xe9pendant-de-la-position-pic"},"Code ind\xe9pendant de la position (PIC)"),(0,i.kt)("p",null,"Le code qui peut \xeatre charg\xe9 sans n\xe9cessiter de d\xe9placement est appel\xe9 code ind\xe9pendant de la position (PIC). Les utilisateurs dirigent les syst\xe8mes de compilation GNU pour g\xe9n\xe9rer du code PIC avec l'option -fpic de gcc. Les biblioth\xe8ques partag\xe9es doivent toujours \xeatre compil\xe9es avec cette option."),(0,i.kt)("p",null,"Le g\xe9n\xe8re \xe9galement une relocalisation. record pour chaque entr\xe9e dans le GOT. ",(0,i.kt)("img",{alt:"img_8.png",src:t(5527).Z,width:"1320",height:"568"})," \u7531\u4e8e\u5668 \u65e0\u6cd5 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684\u90fd \u5728 \u6570\u636e \u8282\u8282 \u4e2d \u521b\u5efa \u4e00 \u51fd\u6570\u51fd\u6570 xxx @ plt, \u7136\u540e \u5c06 \u4e2d\u8c03\u7528 \u5730\u5740 \u66ff \u6362 \u4ee3\u7801 \u4e2d\u8c03\u7528 \u5730\u5740 \u66ff \u6240\u4ee5 \u6240\u4ee5 \u901a\u8fc7 xxx @ xxx @ Plot \u7684 \u66f4\u66f4, \u4ee5\u53ca \u6307\u5411 \u7684 \u66f4. la table de liaison de proc\xe9dure (PLT). Si un module objet appelle des fonctions d\xe9finies dans des biblioth\xe8ques partag\xe9es, il poss\xe8de alors ses propres GOT et PLT. Le GOT fait partie du segment de donn\xe9es. Le PLT fait partie du segment de code. ",(0,i.kt)("inlineCode",{parentName:"p"},"\xc9tant donn\xe9 que addcnt est d\xe9fini par le module libvector.so, le compilateur peut utiliser la distance constante entre le segment de code et le segment de donn\xe9es pour g\xe9n\xe9rer une r\xe9f\xe9rence relative PC directe \xe0 addcnt, et ajouter une relocalisation pour permettre \xe0 l'\xe9diteur de liens de construire ce module partag\xe9 Parse ce. Cependant, si addcnt est d\xe9fini par un autre module partag\xe9, un acc\xe8s indirect via GOT est requis. Ici, le compilateur choisit la solution la plus g\xe9n\xe9rale, en utilisant GOT pour toutes les r\xe9f\xe9rences."),"\\ ",(0,i.kt)("inlineCode",{parentName:"p"},"objdump -dx prog")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\n <main>\n\n%e201028 <z>\n 78a\xa0: 48 8d 35 7f 08 20 00 lea 0x20087f(%rip),%rsi # 201010 <y>\n 791\xa0: 48 8d 3d 80 08 20 00 lea 0x200880(%rip),%rdi # 201018 <x>\n 898 a3 fe ff ff callq 640 <addvec@plt>\n 79d\xa0: 8b 0d 89 08 20 00 mov 0x200889(%rip),%ecx # 20102c <z+0x4>\n 7a3\xa0: 8b 15 7f 08 20 00 mov\n (%rip),%edx # <z>7a9\xa0: 48 8d 35 a4 00 00 00 lea 0xa4(%rip),%rsi # 854 <_IO_stdin_used+0x4>\n 7b0\xa0: bf 01 00 00 00 mov $0x1,%edi\n 7b5\xa0: b8 00 00 00 00 mov $0x0 ,%eax\n 7ba\xa0: e8 91 fe ff ff callq 650 <__printf_chk@plt>\n 7bf\xa0: b8 00 00 00 00 mov $0x0,%eax\n 7c4\xa0: 48 83 c4 08 add $0x8,%rsp\n 7c8\xa0: c3 retq   \n 7c9\xa0: 0f 1f 80 00 00 00 00 nopl 0x0(%rax)\n")),(0,i.kt)("p",null,"\u5bf9 Addvevec \u51fd\u6570 \u548c \u548c \u548c PRINRF \u51fd\u6570 \u7684 \u8c03\u7528 \u8f6c\u5316 \u5bf9 ADDVEC @ plt \u548c __ __printf_chk @ plt \u51fd\u6570 \u7684 \u8c03\u7528, \u8fd9 \u4e24 \u51fd\u6570 \u51fd\u6570 \u662f \u5728 .Plt \u4e2d \u7684, \u800c .Plt \u4e2d \u7684 \u5185\u5bb9 \u5982\u4e0b \u6240"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"D\xe9montage de la section .plt :\n\n0000000000000630 <.plt>\xa0:\n 630\xa0: ff 35 82 09 20 00 pushq 0x200982(%rip) # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>\n 636\xa0: ff 25 84 09 20 ) # 200fc0 <_global_offset_table_ + 0x10>\n 63c: 0f 1f 40 00 NOPL 0x0 (% Rax)\n\n0000000000000640 <addvec@plt>:\n 640: FF 25 82 09 20 00 JMPQ * 0x200982 (% RIP) # 200fc8 <addvec>\n 646: 68 00 00 00 00 pushq 0 $ 0x0\n 64B: E9 E0 FF FF FF JMPQ 630 <.PLT>\n\n000000000000650 <__PRINF_CHK @ PLT>:\n 650: FF 25 7A 09 20 00 JMPQ * 0x20097A (% RIP) # 200fd0 <__printf_chk @ glibc_2. 3.4>\n 656\xa0: 68 01 00 00 00 pushq $0x1\n 65b\xa0: e9 d0 ff ff ff jmpq 630 <.plt>\n")),(0,i.kt)("p",null,"\u4eec \u4eec \u76ee\u6807 \u7684 \u7684. \u4eec \u7684 \u7684. \u4eec \u7684 \u7684 \u7684.\u4e2d \u5bf9\u5e94 \u7684 obtenez \u4e2d \u4fdd\u5b58 \u7684 \u5730\u5740. \u6bd4\u5982\u9762 \u4eec\u4eec \u8c03\u7528 addvevec @ plt \u51fd\u6570 \u65f6 \u4f1a \u4f1a\u884c 0x640 \u7684 JMPQ * 0x200982 (% RIP) \u6307\u4ee4, \u7684 0x200982 \u5c31 \u662f\u9762 \u7684 \u8ddd\u79bb \u5e38\u91cf, \u7528\u6765 \u7684 \u8ddd\u79bb\u8ddd\u79bbGOT \u9879, \u8fd9\u91cc \u5f97\u5230 \u8bbf\u95ee \u7684 got \u7684 \u5730\u5740 \u4e3a 0x200982 + 0x646 = 0x200fc8, \u800c \u8be5 \u7684 got \u5185\u5bb9 \u6240 ",(0,i.kt)("inlineCode",{parentName:"p"},"0x00200fc0 00000000 0000000000000000000000000000000000000000000000000000 0000000000 .....\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"000000000000000630\n <>FF 35 82 09 20 00 Poussette 0x200982 (% RIP) # 200fb8 <_global_offset_table_ + 0x8>\n 636: FF 25 84 09 20 00 JMPQ * 0x200984 (% RIP) # 200fc0 <_global_offset_table_ + 0x10>\n 63c\xa0: 0f 1f 40 00 nopl 0x0(%rax)\n")),(0,i.kt)("p",null,"\u4e2d \u4e00 \u6761\u6761 \u662f \u5c06 \u5730\u5740 0x200982 + 0x636 = 0x200fb8 \u4f5c\u4e3a \u53c2\u6570 \u538b\u5165\u6808 \u8f6c \u8f6c 0x200984 + 0x63c = 0x200fc0 \u5904 \u4eec \u4eec \u4eec \u4eec \u4eec \u4eec \u4eec \u4eec \u4eec\u6267 \u76ee\u6807 \u7684 \u503c \u53ef \u7684 \u7684 \u503c\u4f1a \u53ef \u7684 \u7684 \u503c\u4f1a \u53ef\u53ef \u8be5 \u7684 \u503c\u4f1a \u4fee\u6539 \u8be5 \u7684 \u503c\u4f1a\u503c\u4f1a \u5230 \u8be5 \u7684 \u503c\u4f1a \u4fee\u6539 \u8be5 \u7684 \u7684 \u503c\u4f1a\u503c\u4f1a\u503c\u4f1a\u5230\u4ec0\u4e48\u5185\u5b58\u5730\u5740\u3002\u90a3\u8be5\u51fd\u6570\u662f\u5982\u4f55\u77e5\u9053\u8981\u83b7\u5f97\u54ea\u4e2a\u51fd\u6570\u7684\u5730\u5740\uff0c\u4ee5\u53ca\u8981\u5c06\u51fd\u6570\u5730\u5740\u4fdd\u5b58\u5230\u54ea\u4e2agot\u987d\u4fdd\u5b58\u5230\u54ea\u4e2agot\u987d"),(0,i.kt)("p",null,"\u6211\u4eec\u89c2\u5bdf\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u4e2d\u4ee5\u4e0b\u5171\u4eab\u5e93\u7684\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"0000000000000640 <addvec@plt>:\n 640: FF 25 82 09 20 00 JMPQ * 0x200982 (% RIP) # 200FC8 <addvec>\n 646: 68 00 00 00 00 Poussette 0x0\n 64B: E9 E0 FF FF FF JMPQ 630 <.PLT>\n\n000000000000000650 <__printf_chk@plt>\xa0:\n \xa0650\xa0:\xa0ff 25 7a 09 20>jmpq *\n (%rip) #\n <630 <.plt>\n")),(0,i.kt)("p",null,"\u73b0 \u73b0 \u7684 \u7b2c\u4e00\u6761 \u6307\u4ee4 \u7684 \u7684 \u7684 obtient \u7684 \u7684 \u4e0b \u4e00 \u6761 \u7684 \u5730\u5740, \u5f53 \u5f53 \u5f53 \u4e00 \u4e00 \u4e00 \u4e00 \u4e00 \u6761 \u5230 \u4e0b \u4e00Rela.plt\u7684\u7d22\u5f15"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"La section de relocalisation '.rela.plt' \xe0 l'offset 0x5e8 contient 2 entr\xe9es :\n  Offset Info Type Sym. Valeur Sym. Nom + Addend\n000000200fc8 000300000007 R_X86_64_JUMP_SLO 000000000000000 addvec + 0\n000000200fd0 000500000007 R_X86_64_JUMP_SLO 000000000 __print@printfC40 __0 300000\n")),(0,i.kt)("p",null,"\u5176\u4e2d, offset \u7684 \u5730\u5740, sym.name \u5c31 \u51fd\u6570 \u7684 \u540d\u5b57. \u6240\u4ee5 \u52a8\u6001\u94fe\u63a5 \u7d22 \u5f15\u503c \u6570\u636e\u7ec4 \u4ee5\u53ca \u4ee5\u53ca \u5176 \u5b9a\u4f4d \u52a8\u6001\u5e93\u51fd\u6570 \u4ee5\u53ca \u4ee5\u53ca \u5176 \u5730\u5740 \u4fdd\u5b58\u54ea\u4e2agot\u9879\u3002"),(0,i.kt)("p",null,"\u7684 \u7684 Addvevec \u51fd\u6570 \u7684 \u5185\u5b58 \u5730\u5740 \u4fdd\u5b58 \u4e0b \u6b21 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u5c31 \u5c31 \u8be5 \u8be5 \u8be5 \u8be5 \u8be5 \u80fd \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u5185\u5b58\u5185\u5b58."),(0,i.kt)("p",null,"\u4eec \u73b0 \u7684 xxx @ \u7684 xxx @ \u7684 \u51fd\u6570 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684\u4e2d \u4e00 \u7684 \u7684 \u51fd\u6570 \u4f1a \u7684 \u7684 \u51fd\u6570 \u4f1a \u8be5 \u7684 \u51fd\u6570 \u8be5 \u8be5 \u7684 \u7684 \u7684 \u51fd\u6570 \u65b9\u6cd5 \u65b9\u6cd5 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u7684 \u5730\u5740, \u5426\u5219 \u5426\u5219 \u7684 \u7684 \u5730\u5740, \u5426\u5219 \u5426\u5219\u7531\u6b64\u9632\u6b62\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u52a0\u8f7d\u65f6\u9700\u8981\u5bf9\u5927\u91cf\u7684\u5171\u4eab\u5e93\u7684\u5730\u5740\u8fdb\u884c\u91cd\u5b9a\u4f4d\u3002"),(0,i.kt)("p",null,"\u6240 \u6240 \u8ff0 \u8981 \u4e2d \u4e2d \u4e2d \u4e2d \u4e2d \u7684 \u51fd\u6570 \u65f6 \u6267 \u884c Call XXX @ PLT, \u8bbf\u95ee \u7684 \u5c01\u88c5\uff1a, \u7136\u540e \u7684 \u51fd\u6570 \u7684 \u7684 \u7684 \u9879, \u5982\u679c Vous avez \u9879 \u8d4b\u503c \u7684 xxx\u7684 \u7684 \u5730\u5740, \u4f1a \u4f1a \u8be5 \u8be5 \u8be5 \u4f1a \u8c03\u7528 \u8c03\u7528","[0]"," \u8c03\u7528 \u8c03\u7528 \u5b9a\u4f4d xxx\u5b9a\u4e49 \u7684, \u7f16\u8bd1 \u5668 \u53ef\u4ee5 \u5229\u7528 \u4ee3\u7801 \u6bb5 \u548c \u6570\u636e \u6bb5 \u4e4b\u95f4 \u4e0d\u53d8 \u7684 \u8ddd\u79bb, \u4ea7\u751f \u5bf9 addcnt \u7684 \u76f4\u63a5 PC \u76f8\u5bf9 \u5f15\u7528, \u5e76 \u589e\u52a0 \u4e00\u4e2a \u91cd \u5b9a\u4f4d, \u8ba9 \u94fe\u63a5 \u5668 \u5728 \u6784\u9020 \u8fd9\u4e2a \u5171\u4eab \u6a21\u5757 \u65f6 \u89e3\u6790 \u5b83. \u4e0d\u8fc7, \u5982\u679c addcnt\u662f\u7531\u53e6\u4e00\u4e2a\u5171\u4eab\u6a21\u5757\u5b9a\u4e49\u7684,\u90a3\u4e48\u5c31\u9700\u8981\u901a\u8fc7GOT\u8fdb\u884c\u95f4\u63a5\u8bbf\u95ee.\u5728\u8fd9\u91cc,\u7f16\u8bd1\u5668\u9009\u62e9\u91c7\u7528\u6700\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848,\u4e3a\u6240\u6709\u7684\u5f15\u7528\u4f7f\u7528GOT. ",(0,i.kt)("img",{alt:"img_9.png",src:t(4981).Z,width:"778",height:"932"})," \xc9tape 1. Au lieu d'appeler directement addvec, le programme appelle PLT","[2]",", dont est l'entr\xe9e PLT pour addvec. \\ \xc9tape 2. La premi\xe8re instruction PLT fait un saut indirect \xe0 travers GOT","[4]",". Puisque chaque entr\xe9e GOT pointe initialement vers la deuxi\xe8me instruction dans son entr\xe9e PLT correspondante, le saut indirect retransf\xe8re simplement le contr\xf4le \xe0 l'instruction suivante dans","[2]"," \\ \xc9tape 3. Apr\xe8s avoir pouss\xe9 un ID pour addvec (0x1) sur la pile, PLT","[2]"," saute \xe0 PLT","[0]",". \\ \xc9tape 4. PLT","[0]"," pousse un argument pour l'\xe9diteur de liens dynamique indirectement via GOT","[1]"," , puis saute dans l'\xe9diteur de liens dynamique indirectement via GOT","[2]",". L'\xe9diteur de liens dynamique utilise les deux entr\xe9es de la pile pour d\xe9terminer l'emplacement d'ex\xe9cution d'addvec, \xe9crase GOT","[4]"," avec cette adresse et passe le contr\xf4le \xe0 addvec. ",(0,i.kt)("img",{alt:"img_10.png",src:t(3e3).Z,width:"694",height:"918"})," \xc9tape 1. Le contr\xf4le passe \xe0 PLT","[2]"," comme pr\xe9c\xe9demment.\\ \xc9tape 2. Cependant, cette fois, le saut indirect via GOT","[4]"," transf\xe8re le contr\xf4le directement \xe0 addvec."),(0,i.kt)("h4",{id:"interposition-de-biblioth\xe8que"},"Interposition de biblioth\xe8que"),(0,i.kt)("p",null,"l'interposition de biblioth\xe8que, vous permet d'intercepter les appels aux fonctions de la biblioth\xe8que partag\xe9e et d'ex\xe9cuter votre propre code \xe0 la place.\\ ",(0,i.kt)("strong",{parentName:"p"},"id\xe9e de base\xa0:")," \xe9tant donn\xe9 une fonction cible sur laquelle interposer, vous cr\xe9ez une fonction wrapper dont le prototype est identique \xe0 la fonction cible. En utilisant un m\xe9canisme d'interposition particulier, vous incitez ensuite le syst\xe8me \xe0 appeler la fonction wrapper au lieu de la fonction cible. La fonction enveloppe g\xe9n\xe9ralement ex\xe9cute sa propre logique, puis appelle la fonction cible et renvoie sa valeur de retour \xe0 l'appelant."),(0,i.kt)("p",null,"L'interposition peut se produire au moment de la compilation, de la liaison ou de l'ex\xe9cution lorsque le programme est charg\xe9 et ex\xe9cut\xe9. Exemple de programme int.c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-code/link/interpose/int.c"},"#include <stdio.h>\n#include <malloc.h>\n\nint main()\n{\n    int *p = malloc(32);\n    libre(p);\n    retour(0);\n}\n")),(0,i.kt)("h5",{id:"1-interposition-au-moment-de-la-compilation"},"1. Interposition au moment de la compilation"),(0,i.kt)("p",null,"Fichier local de malloc.h"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-code/link/interpose/malloc.h"},"#define malloc(taille) mymalloc(taille)\n#define free(ptr) myfree(ptr)\n")),(0,i.kt)("p",null,"\u7136\u540e \u7f16\u8bd1 \u7f16\u8bd1.C \u65f6, \u4f7f\u7528 -I \u7f16\u8bd1 \u9009\u9879 \u9884\u5904\u7406 \u4f7f\u5f97 \u9884\u5904\u7406 \u9884\u5904\u7406 \u7684 \u7684 Malloc.h \u7684 MALLALLOC \u6df7\u5408 MYMALLALC \u6df7\u5408 MYMADRE \u51fd\u6570. \u4eec \u4eec \u4eec \u81ea\u5df1 \u5b9e\u73b0 myMALLOC \u548c MYMALLOC \u51fd\u6570, \u5176\u4e2d \u9700\u8981 \u8c03\u7528 \u7684 Malloc.h, \u7531\u4e8e Malloc.h \u4f7f\u7528 #define \u6307\u4ee4, \u4eec\u4eec \u540e\u9762 \u9700\u8981 Malloc \u7684 \u5730\u65b9 \u88ab MyMALLOC \u66ff\u4ee3. \u800c mymalloc.c \u4ee3\u7801\uff1a Fonctions wrapper dans mymalloc.c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mymalloc.c"},'#ifdef COMPILETIME //\u7f16\u8bd1\u9009\u9879\u662fCOMPILETIME \uff0c\u8fd9\u6bb5\u4ee3\u7801\u624d\u4f1a\u7f16\u8bd1\u8fdb\u53bb\n#include <stdio.h>\n#include <malloc.h>\n\n/* fonction wrapper malloc */\nvoid *mymalloc(size_t size)\n{\n    void *ptr = malloc( Taille);\n    printf("malloc(%d)=%p\\n",\n           (int)taille, ptr);\n    points de retour\xa0;\n}\n\n/* fonction wrapper gratuite */\nvoid myfree(void *ptr)\n{\n    free(ptr);\n    printf("libre(%p)\\n", ptr);\n    printf("COMPILETIME\\n");\n}\n#endif\n')),(0,i.kt)("p",null,"\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5f97\u5230\u8be5\u51fd\u6570\u7684\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6mymalloc.o"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -DCOMPILETIME -c mymalloc.c\n")),(0,i.kt)("p",null,"\u7136\u540e\u5728\u672c\u5730\u7684malloc.h\u4e2d\u7ed9\u51fa\u5305\u88c5\u51fd\u6570\u7684\u51fd\u6570\u539f\u578b\uff0c\u5373"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-code/link/interpose/malloc.h"},"#define malloc(taille) mymalloc(taille)\n#define free(ptr) myfree(ptr)\n\nvoid *mymalloc(size_t size);\nvoid myfree(void *ptr);\n")),(0,i.kt)("p",null,"\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u884c\u8fdb\u884c\u7f16\u8bd1\u65f6\u6253\u6869"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -I. -o intc int.c mymalloc.o\n")),(0,i.kt)("p",null,"\u6b64\u65f6, \u7531\u4e8e -i. \u7f16\u8bd1 \u9009\u9879, \u5bf9\u4e8e Int.c \u4e2d \u7684 Malloc.h, \u9884\u5904\u7406 \u4f1a \u4ece \u641c\u7d22 Malloc.h \u6587\u4ef6, \u800c \u672c\u5730 Malloc.h \u6587\u4ef6 \u4e2d, Malloc \u548c gratuit \u91cd\u51fd\u6570 \u6210mymalloc\u548cmyfree\u51fd\u6570\uff0c\u800c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5728\u4e4b\u524d\u7f16\u8bd1\u597d\u7684mymalloc.o\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u4e2d\uff0c\u6b64\u65f6\u5c31\u5b8c\u6210\u4e86\u7f16\u8bd1\u65f6\u6253\u6869\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"malloc(32)=0x558ca12fc2a0\nlibre(0x558ca12fc2a0)\nCOMPILETIME\n")),(0,i.kt)("p",null,"\u4f7f\u7528malloc\u7684\u5730\u65b9\uff0c\u90fd\u88ab\u66ff\u6362\u6210\u4e86mymalloc\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-int.i"},"void *mymalloc(taille_t taille);\nvoid myfree(void *ptr);\n")),(0,i.kt)("h5",{id:"2-interposition-de-temps-de-liaison"},"2. Interposition de temps de liaison"),(0,i.kt)("p",null,"Linux \u9759\u6001 \u94fe\u63a5\u5668 \u4e5f \u4f7f\u7528 \u8fdb \u94fe\u63a5 \u4e3a __ __ __ __ ",(0,i.kt)("strong",{parentName:"p"}," \u7684 ")," ",(0,i.kt)("strong",{parentName:"p"}," \u7684 \u7684 ")," ",(0,i.kt)("strong",{parentName:"p"}," \u7684 ")," \u7684 \u7684 \u5f15\u7528 \u7684 \u7684 \u7684 \u5f15\u7528\u5f15\u7528\u4f1a\u66ff\u6362\u6210\u5bf9",(0,i.kt)("strong",{parentName:"p"},"wrap_f\u51fd\u6570\u7684\u8c03\u7528\uff0c\u800c\u901a\u8fc7"),"real_f\u51fd\u6570\u6765\u8c03\u7528\u539f\u59cb\u51fd\u6570f\u3002 \u6211\u4eec\u5b9a\u4e49\u4ee5\u4e0b\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mymalloc.c"},'#ifdef LINKTIME\n#include <stdio.h>\n\nvoid *__real_malloc(size_t size);\nvoid __real_free(void *ptr);\n\n/* fonction wrapper malloc */\nvoid *__wrap_malloc(size_t size)\n{\n    void *ptr = __real_malloc(size); /* Appel libc malloc */\n    printf("malloc(%d) = %p\\n", (int)size, ptr);\n    points de retour\xa0;\n}\n\n/* fonction wrapper libre */\nvoid __wrap_free(void *ptr)\n{\n    __real_free(ptr); /* Appel libc free */\n    printf("free(%p)\\n", ptr);\n    printf("LINKTIME\\n");\n}\n#endif\n\n')),(0,i.kt)("p",null,"\u540c\u65f6\u8fdb\u884c\u7f16\u8bd1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -DLINKTIME -Wl,--wrap,malloc -Wl,--wrap,free -o intl int.c mymalloc.c\n")),(0,i.kt)("p",null,"\u4e5f\u53ef\u4ee5\u5206\u5f00\u7f16\u8bd1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -DLINKTIME -c mymalloc.c\ngcc -c int.c\ngcc -Wl,--wrap,malloc -Wl,--wrap,free -o intl int.o mymalloc.o\n")),(0,i.kt)("p",null,"-WL, option \u628a \u6807\u5fd7 \u6807\u5fd7 \u7ed9\u5668 .OPtion \u4e2d \u7684 \u6bcf\u6bcf\u4e2a-Wl,--wrap,gratuit\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"malloc(32)=0x558ca12fc2a0\nlibre(0x558ca12fc2a0)\nLINKTIME\n")),(0,i.kt)("p",null,"\u7531, \u5229\u7528\u5668 \u7684 \u6253\u6869 \u673a\u5236, int.c \u4e2d \u5bf9 Malloc gratuit \u51fd\u6570 \u7684 \u8c03\u7528, \u4f1a \u53d8\u6210 ",(0,i.kt)("strong",{parentName:"p"},"wrap_malloc \u548c "),"wrap_free \u7684 \u8c03\u7528. __ __real_malloc \u5c06 \u88ab \u89e3\u6790 \u7684 Malloc."),(0,i.kt)("p",null,"\u7efc\u4e0a\u6240\u8ff0\uff1a\u60f3\u8981\u5728\u94fe\u63a5\u65f6\u6253\u6869\uff0c\u610f\u5473\u7740\u5728\u5bf9\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u7684\u7b26\u53f7\u8fdb\u884c\u89e3\u6790\u65f6\uff0c\u8fdb\u884c\u66ff\u6362\u3002"),(0,i.kt)("h5",{id:"3-interposition-dex\xe9cution"},"3. Interposition d'ex\xe9cution"),(0,i.kt)("p",null,"\u8fd0 \u7684 \u7684 ld_preload \u7684 \u51fd\u6570 \u7684 ld_preload \u73af\u5883 \u4ef6 \u7684LD_PRELOAD est \xe0 \xa0;"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-mymalloc.c"},'#ifdef RUNTIME\n#define _GNU_SOURCE\n#include <stdio.h>\n#include <stdlib.h>\n#include <dlfcn.h>\n\n/* fonction wrapper malloc */\u800c__real_malloc\u5c06\u4f1a\u88ab\u89e3\u6790\u6210\u771f\u6b63\u7684malloc\u3002\n\nvoid *malloc(size_t size)\n{\n    void *(*mallocp)(taille_t taille);\n    caract\xe8res *erreur\xa0;\n\n    mallocp = dlsym(RTLD_NEXT, "malloc"); /* R\xe9cup\xe8re l\'adresse de libc malloc */ \n    if ((error = dlerror()) != NULL) { \n        fputs(error, stderr);\n        sortie(1);\n    }\n    car *ptr = mallocp(taille); /* Appel libc malloc */\n// printf("malloc(%d) = %p\\n", (int)size, ptr);\n    points de retour\xa0;\n}\n\n/* fonction wrapper libre */\nvoid free(void *ptr)\n{\n    void (*freep)(void *) = NULL;\n    caract\xe8res *erreur\xa0;\n\n    si (!ptr)\n    retour\xa0;\n\n    librep = dlsym(RTLD_NEXT, "libre"); /* R\xe9cup\xe8re l\'adresse de libc free */\n    if ((error = dlerror()) != NULL) {\n        fputs(error, stderr);\n        sortie(1);\n    }\n    librep(ptr); /* Appel libc free */\n    printf("free(%p)\\n", ptr);\n    printf("RUNTIME\\n");\n}\n#endif\n')),(0,i.kt)("p",null,"\u7136\u540e\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u884c\u5c06\u5176\u7f16\u8bd1\u6210\u5171\u4eab\u5e93"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"gcc -DRUNTIME -shared -fpic -o mymalloc.so mymalloc.c -ldl \n")),(0,i.kt)("p",null,"\u7136\u540e\u7f16\u8bd1\uff0c\u5728\u8fd0\u884c\u65f6\u6307\u5b9a\u73af\u5883\u53d8\u91cfLD_PRELOAD"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'gcc -o intr int.c\nLD_PRELOAD="./mymalloc.so" ./intr \n')),(0,i.kt)("p",null,"\u6b64\u65f6\u884c \u5230 Malloc \u548c gratuit \u51fd\u6570 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u8c03\u7528 \u7684 \u7684 \u7684 \u5b9a\u4e49, \u800c \u7684 \u5171 \u4eab\u5e93, \u800c myMALLOC.SO \u4e2d \u5b9a\u4e49 \u8fd9 \u4e24 \u4e2a \u7b26\u53f7 \u4e2a \u4e2a\u4e2a \u7684 \u7684 \u7684 \u7684 \u7684 \u65b9\u5f0f \u7684 \u7684 \u7684 \u65b9\u5f0f \u7684 \u7684 \u7684 \u65b9\u5f0f \u7684 \u65b9\u5f0f \u7684 \u65b9\u5f0f\u4e3a \u7684 \u7684 \u7684 \u7684\u4e3a \u4e2d \u83b7\u5f97 \u7684 \u5171 \u4eab\u5e93 \u4e2d \u83b7\u5f97\uff1a\u7684 \u4eab\u5e93\u5171 \u4e2d \u83b7\u5f97"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'"./mymalloc.so" ./intr \nlibre(0x55a98bc572a0)\nDUR\xc9E D\'EX\xc9CUTION\n\n')),(0,i.kt)("p",null,"Gnu binutils \u5305 \u6709 \u6709 \u53ef\u4ee5 \u53ef\u4ee5 \u53ef\u4ee5 \u53ef\u4ee5 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728 \u5728\u4e2a \u5e73\u53f0. ar\uff1a\u521b\u5efa \u9759\u6001\u5e93, \u5220\u9664, \u5217\u51fa \u548c \u63d0\u53d6. cordes\uff1a\u4e00\u4e2a \u76ee\u6807 \u7684 \u5b57\u7b26\u4e32. bande\uff1a\u76ee\u6807 \u76ee\u6807 \u6587\u4ef6 \u4e2d \u5220\u9664 \u7b26\u53f7 \u4fe1\u606f. nm\uff1a\u5217\u51fa \u4e00\u4e2a \u76ee\u6807 \u7684 \u7b26\u53f7 \u4e2d \u7684 \u7b26\u53f7. Taille\uff1a\u5217\u51fa \u76ee\u6807 \u6587\u4ef6 \u4e2d\u8282 \u7684 \u540d\u5b57\u540d\u5b57 \u5927\u5c0f. LOOTAGE\uff1a\u663e\u793a \u4e00\u4e2a \u76ee\u6807 \u6587\u4ef6 \u7684\u5b8c\u6574, \u5305\u62ec elf \u4e2d \u7684 \u6240\u6709 \u4fe1\u606f. \u5305\u542b Taille \u548c nm \u7684 \u529f\u80fd. objdump\uff1a\u4e8c\u8fdb\u5236\u6709 \u4e8c\u8fdb\u5236\u6709 \u4e8c\u8fdb\u5236\u6709 \u4e8c\u8fdb\u5236 \u5de5\u4ef6 \u4ef6 \u4ef6 \u5927 \u7684 \u4f5c\u7528 \u76ee\u6807 \u5b83 \u5927 \u7684 \u4f5c\u7528 \u4fe1\u606f .text \u8282\u4e2d \u7684.\u4e8c\u8fdb\u5236\u6307\u4ee4\u3002 Linux \u7cfb\u7edf\u4e3a\u64cd\u4f5c\u5171\u4eab\u5e93\u8fd8\u63d0\u4f9b\u4e86 LDD \u7a0b\u5e8f\uff1a LDD \u7a0b\u51fa\u4e00\u4e2a\uff1a\u6587\u4ef6\u5728\u8fd0\u884c\u65f6\u6240\u9700\u65f6\u6240\u9700"))}d.isMDXComponent=!0},3e3:function(e,n,t){n.Z=t.p+"assets/images/img_10-e75921c4e5bc39941f7a09e28cb31ce8.png"},1739:function(e,n,t){n.Z=t.p+"assets/images/img_2-7ea081012bfb8ce50223762d38db5d56.png"},9915:function(e,n,t){n.Z=t.p+"assets/images/img_3-f6ba88724de654678c793e808d4d1437.png"},2866:function(e,n,t){n.Z=t.p+"assets/images/img_4-920357f5483a3c3f2b2dfde382453ae8.png"},1918:function(e,n,t){n.Z=t.p+"assets/images/img_5-1312c575e79c44ef649452c1944c51c6.png"},5626:function(e,n,t){n.Z=t.p+"assets/images/img_6-ce6a03bde9531a6cbe27f45be64d85e2.png"},2686:function(e,n,t){n.Z=t.p+"assets/images/img_7-3e602ac16c6f7bc20aa75cf5499d068d.png"},5527:function(e,n,t){n.Z=t.p+"assets/images/img_8-2c2e9c5bbe85954467a1e2ea069981b5.png"},4981:function(e,n,t){n.Z=t.p+"assets/images/img_9-d1d3c70726ac6a65c9a5585bcc6b97bc.png"}}]);