"use strict";(self.webpackChunkblog_sample=self.webpackChunkblog_sample||[]).push([[976],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},982:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={},s="D\xe9bogage des applications Flutter",u={unversionedId:"Flutter/Dartanalysis",id:"Flutter/Dartanalysis",title:"D\xe9bogage des applications Flutter",description:"Analyseurs de fl\xe9chettes",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/Flutter/Dartanalysis.md",sourceDirName:"Flutter",slug:"/Flutter/Dartanalysis",permalink:"/fr/docs/Flutter/Dartanalysis",editUrl:"https://github.com/Malaaaa/blog-sample/tree/main/docs/Flutter/Dartanalysis.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Apprentissage flottant",permalink:"/fr/docs/Flutter/"},next:{title:"Flutterapp",permalink:"/fr/docs/Flutter/Flutterapp"}},d=[{value:"Analyseurs de fl\xe9chettes",id:"analyseurs-de-fl\xe9chettes",children:[],level:3},{value:"Dart Observatory (d\xe9bogueur et analyseur en une seule \xe9tape au niveau de l&#39;instruction)",id:"dart-observatory-d\xe9bogueur-et-analyseur-en-une-seule-\xe9tape-au-niveau-de-linstruction",children:[],level:3},{value:"<code>d\xe9bogueur()</code> d\xe9claration",id:"d\xe9bogueur-d\xe9claration",children:[],level:3},{value:"<code>print</code>\u3001<code>debugPrint</code>\u3001<code>flutter logs</code>",id:"printdebugprintflutter-logs",children:[],level:3},{value:"Assertions en mode d\xe9bogage",id:"assertions-en-mode-d\xe9bogage",children:[],level:3},{value:"D\xe9bogage des couches d&#39;application",id:"d\xe9bogage-des-couches-dapplication",children:[{value:"Arborescence des widgets",id:"arborescence-des-widgets",children:[],level:4},{value:"Arbre de rendu",id:"arbre-de-rendu",children:[],level:4},{value:"Arborescence des couches",id:"arborescence-des-couches",children:[],level:4}],level:3},{value:"S\xe9mantique",id:"s\xe9mantique",children:[],level:3},{value:"Planification",id:"planification",children:[],level:3},{value:"D\xe9bogage visuel",id:"d\xe9bogage-visuel",children:[],level:3},{value:"Animations de d\xe9bogage",id:"animations-de-d\xe9bogage",children:[],level:3},{value:"D\xe9bogage des probl\xe8mes de performances",id:"d\xe9bogage-des-probl\xe8mes-de-performances",children:[],level:3},{value:"Temps de d\xe9marrage de l&#39;application statistique",id:"temps-de-d\xe9marrage-de-lapplication-statistique",children:[],level:3},{value:"Suivi des performances du code Dart",id:"suivi-des-performances-du-code-dart",children:[],level:3}],p={toc:d};function c(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"d\xe9bogage-des-applications-flutter"},"D\xe9bogage des applications Flutter"),(0,i.kt)("h3",{id:"analyseurs-de-fl\xe9chettes"},"Analyseurs de fl\xe9chettes"),(0,i.kt)("p",null,"Avant d'ex\xe9cuter votre application, ex\xe9cutez ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter analyze")," pour tester votre code. Cet outil est un outil de v\xe9rification de code statique qui enveloppe l'outil ",(0,i.kt)("inlineCode",{parentName:"p"},"dartanalyzer")," et est principalement utilis\xe9 pour analyser le code et aider les d\xe9veloppeurs \xe0 trouver d'\xe9ventuelles erreurs. Par exemple, l'analyseur Dart fait un usage intensif des annotations de type dans le code pour aider \xe0 d\xe9tecter les probl\xe8mes et \xe9viter ",(0,i.kt)("inlineCode",{parentName:"p"},"var"),", les param\xe8tres non typ\xe9s, le texte de liste non typ\xe9, etc."),(0,i.kt)("p",null,"Si vous utilisez le plugin Flutter pour IntelliJ, l'analyseur est automatiquement activ\xe9 lorsque vous ouvrez l'IDE. Si le lecteur utilise un autre IDE, il est fortement recommand\xe9 que le lecteur active l'analyseur Dart car la plupart du temps, l'analyseur Dart peut trouver la plupart des probl\xe8mes avant l'ex\xe9cution du code."),(0,i.kt)("h3",{id:"dart-observatory-d\xe9bogueur-et-analyseur-en-une-seule-\xe9tape-au-niveau-de-linstruction"},"Dart Observatory (d\xe9bogueur et analyseur en une seule \xe9tape au niveau de l'instruction)"),(0,i.kt)("p",null,"Si nous d\xe9marrons l'application en utilisant ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter run"),", alors lorsqu'elle s'ex\xe9cute, nous pouvons ouvrir la page Web de l'outil Observatoire, par exemple Observatoire \xe9coute ",(0,i.kt)("a",{parentName:"p",href:"http://127.0.0.1:8100/"},"http://127.0.0.1:8100/")," par d\xe9faut et peut ouvrir le lien directement dans le navigateur. Connectez-vous directement \xe0 votre application \xe0 l'aide du d\xe9bogueur en une seule \xe9tape au niveau de l'instruction. Si vous utilisez IntelliJ, vous pouvez \xe9galement utiliser son d\xe9bogueur int\xe9gr\xe9 pour d\xe9boguer votre application."),(0,i.kt)("p",null,"Observatory prend \xe9galement en charge l'analyse, la v\xe9rification du tas, etc. Pour plus d'informations sur l'Observatoire, reportez-vous \xe0 la documentation ",(0,i.kt)("a",{parentName:"p",href:"https://dart-lang.github.io/observatory/"},"Observatoire"),"."),(0,i.kt)("p",null,"Si vous utilisez Observatory pour l'analyse, veillez \xe0 ex\xe9cuter la commande ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter run")," avec l'option ",(0,i.kt)("inlineCode",{parentName:"p"},"-profile"),' pour ex\xe9cuter l\'application. Sinon, le probl\xe8me principal qui appara\xeetra dans le profil sera le d\xe9bogage des assertions pour v\xe9rifier les diff\xe9rents invariants du framework (voir "Debugging Mode Assertions" ci-dessous).'),(0,i.kt)("h3",{id:"d\xe9bogueur-d\xe9claration"},(0,i.kt)("inlineCode",{parentName:"h3"},"d\xe9bogueur()")," d\xe9claration"),(0,i.kt)("p",null,"Cette instruction ",(0,i.kt)("inlineCode",{parentName:"p"},"debugger()")," peut \xeatre utilis\xe9e pour ins\xe9rer des points d'arr\xeat programmatiques lors de l'utilisation de Dart Observatory (ou d'un autre d\xe9bogueur Dart, tel que le d\xe9bogueur de l'IDE IntelliJ). Pour l'utiliser, vous devez ajouter ",(0,i.kt)("inlineCode",{parentName:"p"},"import 'dart:developer'\xa0;")," en haut du fichier concern\xe9."),(0,i.kt)("p",null,"L'instruction ",(0,i.kt)("inlineCode",{parentName:"p"},"debugger()")," prend une r\xe9f\xe9rence facultative ",(0,i.kt)("inlineCode",{parentName:"p"},"when"),"."),(0,i.kt)("p",null,"param\xe8tre, vous pouvez sp\xe9cifier que le param\xe8tre ne sera interrompu que lorsqu'une condition sp\xe9cifique est vraie, comme suit."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"void someFunction(double offset) {\n  debugger(when: offset > 30.0);\n  // ...\n}\n")),(0,i.kt)("h3",{id:"printdebugprintflutter-logs"},(0,i.kt)("inlineCode",{parentName:"h3"},"print"),"\u3001",(0,i.kt)("inlineCode",{parentName:"h3"},"debugPrint"),"\u3001",(0,i.kt)("inlineCode",{parentName:"h3"},"flutter logs")),(0,i.kt)("p",null,"La fonction Dart ",(0,i.kt)("inlineCode",{parentName:"p"},"print()")," sortira sur la console syst\xe8me et vous pouvez utiliser ",(0,i.kt)("inlineCode",{parentName:"p"},"journaux de flutter")," pour l'afficher (essentiellement un wrapper ",(0,i.kt)("inlineCode",{parentName:"p"},"adb logcat"),")."),(0,i.kt)("p",null,"Si vous produisez trop \xe0 la fois, Android supprimera parfois certaines lignes de journal. Pour \xe9viter cela, vous pouvez utiliser ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/foundation/debugPrint.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPrint()"))," de la biblioth\xe8que ",(0,i.kt)("inlineCode",{parentName:"p"},"foundation")," de Flutter. Il s'agit d'une impression wrapper qui limite la sortie \xe0 un niveau qui \xe9vite d'\xeatre abandonn\xe9 par le noyau Android."),(0,i.kt)("p",null,"De nombreuses classes du framework Flutter ont des impl\xe9mentations ",(0,i.kt)("inlineCode",{parentName:"p"},"toString"),". Par convention, cette sortie inclut g\xe9n\xe9ralement la sortie monoligne ",(0,i.kt)("inlineCode",{parentName:"p"},"runtimeType")," de l'objet, g\xe9n\xe9ralement sous la forme ClassName (plus d'informations sur cette instance...). Certaines classes utilis\xe9es dans l'arborescence ont \xe9galement ",(0,i.kt)("inlineCode",{parentName:"p"},"toStringDeep"),", qui renvoie une description multiligne de l'ensemble de la sous-arborescence \xe0 partir de ce point. D\xe9j\xe0 certaines classes avec des informations d\xe9taill\xe9es ",(0,i.kt)("inlineCode",{parentName:"p"},"toString")," impl\xe9menteront un ",(0,i.kt)("inlineCode",{parentName:"p"},"toStringShort")," qui retourne uniquement le type de l'objet ou une autre description tr\xe8s courte (un ou deux mots)."),(0,i.kt)("h3",{id:"assertions-en-mode-d\xe9bogage"},"Assertions en mode d\xe9bogage"),(0,i.kt)("p",null,"Pendant le d\xe9bogage de l'application Flutter, l'instruction Dart ",(0,i.kt)("inlineCode",{parentName:"p"},"assert")," est activ\xe9e et utilis\xe9e par le framework Flutter pour effectuer un certain nombre de v\xe9rifications d'ex\xe9cution afin de v\xe9rifier qu'une r\xe8gle immuable n'est pas viol\xe9e."),(0,i.kt)("p",null,"Lorsqu'une r\xe8gle immuable est viol\xe9e, elle est signal\xe9e \xe0 la console avec des informations contextuelles pour aider \xe0 rechercher la cause premi\xe8re du probl\xe8me."),(0,i.kt)("p",null,"Pour d\xe9sactiver le mode d\xe9bogage et utiliser le mode release, ex\xe9cutez votre application avec ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter run --release"),". Cela d\xe9sactive \xe9galement le d\xe9bogueur de l'Observatoire. Un mode interm\xe9diaire qui d\xe9sactive toutes les aides au d\xe9bogage \xe0 l'exception de l'Observatoire est appel\xe9 ",(0,i.kt)("inlineCode",{parentName:"p"},"-profile mode"),", il suffit de remplacer ",(0,i.kt)("inlineCode",{parentName:"p"},"-release")," par ",(0,i.kt)("inlineCode",{parentName:"p"},"-profile"),"."),(0,i.kt)("h3",{id:"d\xe9bogage-des-couches-dapplication"},"D\xe9bogage des couches d'application"),(0,i.kt)("p",null,"Chaque couche du framework Flutter offre la possibilit\xe9 de vider (vider) son \xe9tat actuel ou ses \xe9v\xe9nements sur la console (\xe0 l'aide de ",(0,i.kt)("inlineCode",{parentName:"p"},"-debugPrint"),")."),(0,i.kt)("h4",{id:"arborescence-des-widgets"},"Arborescence des widgets"),(0,i.kt)("p",null,"Pour vider l'\xe9tat de l'arborescence Widgets, appelez ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/widgets/debugDumpApp.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugDumpApp()")),". Vous pouvez appeler cette m\xe9thode (apr\xe8s avoir appel\xe9 ",(0,i.kt)("inlineCode",{parentName:"p"},"runApp()"),") \xe0 tout moment lorsque l'application n'est pas en phase de construction (c'est-\xe0-dire qu'elle n'est pas appel\xe9e dans la m\xe9thode ",(0,i.kt)("inlineCode",{parentName:"p"},"build()")," ), tant que l'application a \xe9t\xe9 construite \xe0 moins une fois (c'est-\xe0-dire \xe0 tout moment apr\xe8s avoir appel\xe9 ",(0,i.kt)("inlineCode",{parentName:"p"},"build()"),")."),(0,i.kt)("p",null,"Par exemple, cette application\xa0:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter/mat\xe9riel.dart'\xa0;\n\nvoid main() {\n  runApp(\n    new MaterialApp(\n      home: new AppHome(),\n    ),\n  );\n}\n\nclass AppHome \xe9tend StatelessWidget {\n  @override\n  Widget build (contexte BuildContext) {\n    return new Material(\n      enfant\xa0: new Center(\n        enfant\xa0: new FlatButton(\n          onPressed\xa0: () {\n            debugDumpApp();\n          },\n          enfant\xa0: nouveau texte ('Dump App'),\n        ),\n      ),\n    );\n  }\n}\n")),(0,i.kt)("p",null,"... affichera quelque chose comme ceci (les d\xe9tails exacts varieront en fonction de la version du framework, de la taille de l'appareil, etc.)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'I/flutter ( 6559) : WidgetsFlutterBinding - CHECKED MODE\nI/flutter ( 6559) : RenderObjectToWidgetAdapter<RenderBox>([GlobalObjectKey RenderView(497039273)] ; renderObject : RenderView)\nI/flutter ( 6559) : \u2514MaterialApp(state : _MaterialAppState(1009803148 ))\nI/flutter ( 6559)\xa0: \u2514ScrollConfiguration()\nI/flutter ( 6559)\xa0: \u2514AnimatedTheme(dur\xe9e\xa0: 200\xa0ms\xa0; \xe9tat\xa0: _AnimatedThemeState(543295893\xa0; ticker inactif\xa0; ThemeDataTween(ThemeData(Brightness.light Color(0xff2196f3) etc. ...) \u2192 null)))\nI/scintillement ( 6559): \u2514Theme(ThemeData(Brightness.light Color(0xff2196f3) etc...))\nI/scintillement ( 6559)\xa0: \u2514WidgetsApp([GlobalObjectKey _MaterialAppState(1009803148)]\xa0; \xe9tat\xa0: _WidgetsAppState(552902158))\nI/scintillement ( 6559)\xa0: \u2514CheckedModeBanner()\nI/scintillement ( 6559)\xa0: \u2514Banner()\nI/flutter ( 6559) : \u2514CustomPaint(renderObject : RenderCustomPaint)\nI/flutter ( 6559) : \u2514DefaultTextStyle(inherit : true ; color : Color(0xd0ff0000) ; family : "monospace" ; size : 48.0 ; weight : 900 ; d\xe9coration : double Color(0xffffff00) TextDecoration.underline)\nI/flutter ( 6559) : \u2514MediaQuery(MediaQueryData(size : Size(411.4, 683.4), devicePixelRatio : 2.625, textScaleFactor : 1.0, padding : EdgeInsets(0.0, 24.0, 0.0 , 0.0)))\nI/scintillement ( 6559) : \u2514LocaleQuery(null)\nI/scintillement ( 6559) : \u2514Titre(couleur : Couleur(0xff2196f3))\n... \n')),(0,i.kt)("p",null,"Il s'agit d'un arbre \"plat\" montrant tous les widgets projet\xe9s par les diff\xe9rentes fonctions de construction (si vous appelez ",(0,i.kt)("inlineCode",{parentName:"p"},"toStringDeepwidget")," \xe0 la racine de l'arbre des widgets, c'est l'arbre que vous obtenez). Vous verrez de nombreux widgets qui n'apparaissent pas dans le code source de votre application car ils ont \xe9t\xe9 ins\xe9r\xe9s par la fonction ",(0,i.kt)("inlineCode",{parentName:"p"},"build()")," du widget dans le framework. Par exemple, ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/material/InkFeature-class.html"},(0,i.kt)("inlineCode",{parentName:"a"},"InkFeature"))," est un d\xe9tail d'impl\xe9mentation du widget Material ."),(0,i.kt)("p",null,"Lorsque debugDumpApp() est appel\xe9 lorsque le bouton passe d'\xeatre enfonc\xe9 \xe0 rel\xe2ch\xe9, l'objet FlatButton appelle \xe9galement ",(0,i.kt)("inlineCode",{parentName:"p"},"setState()")," et se marque comme ",(0,i.kt)("inlineCode",{parentName:"p"},"dirty"),'. C\'est pourquoi si vous regardez le dump, vous verrez des objets sp\xe9cifiques marqu\xe9s comme "sales". Vous pouvez \xe9galement voir quels auditeurs de gestes ont \xe9t\xe9 enregistr\xe9s\xa0; dans ce cas, un seul GestureDetector est list\xe9 et \xe9coute le geste "tap" ("tap" vaut ',(0,i.kt)("inlineCode",{parentName:"p"},"TapGestureDetector"),"s ",(0,i.kt)("inlineCode",{parentName:"p"},"toStringShort")," sorties de fonction)"),(0,i.kt)("p",null,"Si vous \xe9crivez votre propre widget, vous pouvez ajouter des informations en rempla\xe7ant ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/widgets/Widget/debugFillProperties.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugFillProperties()")),". Prenez l'objet ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/foundation/DiagnosticsProperty-class.html"},"DiagnosticsProperty")," comme param\xe8tre de m\xe9thode et appelez la m\xe9thode de la classe parente. Cette fonction est utilis\xe9e par cette m\xe9thode ",(0,i.kt)("inlineCode",{parentName:"p"},"toString")," pour remplir les informations de description du widget."),(0,i.kt)("h4",{id:"arbre-de-rendu"},"Arbre de rendu"),(0,i.kt)("p",null,"Si vous essayez de d\xe9boguer des probl\xe8mes de mise en page, l'arborescence des widgets peut ne pas \xeatre suffisamment d\xe9taill\xe9e. Dans ce cas, vous pouvez vider l'arborescence de rendu en appelant ",(0,i.kt)("inlineCode",{parentName:"p"},"debugDumpRenderTree()"),". Comme avec ",(0,i.kt)("inlineCode",{parentName:"p"},"debugDumpApp()"),", vous pouvez appeler cette fonction \xe0 tout moment autre que pendant la phase de mise en page ou de dessin. En r\xe8gle g\xe9n\xe9rale, l'appeler depuis le callback ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/scheduler/SchedulerBinding/addPersistentFrameCallback.html"},"frame")," ou depuis un gestionnaire d'\xe9v\xe9nements est la meilleure solution."),(0,i.kt)("p",null,"Pour appeler ",(0,i.kt)("inlineCode",{parentName:"p"},"debugDumpRenderTree()"),", vous devez ajouter ",(0,i.kt)("inlineCode",{parentName:"p"},"import'package:flutter/rendering.dart';")," \xe0 votre fichier source."),(0,i.kt)("p",null,"La sortie du petit exemple ci-dessus est illustr\xe9e ci-dessous."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"I/flutter ( 6559) : RenderView\nI/flutter ( 6559) : \u2502 mode d\xe9bogage activ\xe9 - android\nI/flutter ( 6559) : \u2502 taille de la fen\xeatre : Size(1080.0, 1794.0) (en pixels physiques)\nI/flutter ( 6559) : \u2502 ratio de pixels de l'appareil : 2,625 (pixels physiques par pixel logique)\nI/scintillement ( 6559) : \u2502 configuration : Taille(411,4, 683,4) \xe0 2,625x (en pixels logiques)\nI/scintillement ( 6559) : \u2502\nI/flutter ( 6559) : \u2514\u2500enfant : RenderCustomPaint\nI/flutter ( 6559) : \u2502 cr\xe9ateur : CustomPaint \u2190 Banner \u2190 CheckedModeBanner \u2190\nI/flutter ( 6559) : \u2502 WidgetsApp-[GlobalObjectKey _MaterialAppState(1009803148)] \u2190\nI/flutter ( 6559) : \u2502 Th\xe8me \u2190 AnimatedTheme \u2190 ScrollConfiguration \u2190 MaterialApp \u2190\nI/flutter ( 6559) : \u2502   [root]\nI/flutter ( 6559) : \u2502 parentData : <none>\nI/flutter ( 6559) : \u2502 contraintes : BoxConstraints (w=411.4, h=683.4)\nI/flottement ( 6559): \u2502 size: Size(411.4, 683.4)\n... \n")),(0,i.kt)("p",null,"Il s'agit de la sortie de la fonction ",(0,i.kt)("inlineCode",{parentName:"p"},"toStringDeep")," de l'objet racine ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderObject"),"."),(0,i.kt)("p",null,"Lors du d\xe9bogage des probl\xe8mes de mise en page, les principaux \xe9l\xe9ments \xe0 examiner sont les champs ",(0,i.kt)("inlineCode",{parentName:"p"},"taille")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"contraintes"),". Les contraintes sont transmises dans l'arborescence et les tailles sont transmises vers le haut."),(0,i.kt)("p",null,"Si vous \xe9crivez vos propres objets de rendu, vous pouvez ajouter les informations au vidage en rempla\xe7ant ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering/Layer/debugFillProperties.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugFillProperties()")),". Prenez l'objet ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/foundation/DiagnosticsProperty-class.html"},"DiagnosticsProperty")," comme param\xe8tre de la m\xe9thode et appelez la m\xe9thode parent."),(0,i.kt)("h4",{id:"arborescence-des-couches"},"Arborescence des couches"),(0,i.kt)("p",null,"Le lecteur peut comprendre que l'arbre de rendu peut \xeatre en couches et que le dessin final n\xe9cessite la composition de diff\xe9rentes couches, tandis que Layer est la couche \xe0 composer lors du dessin. Si vous essayez de d\xe9boguer le probl\xe8me de composition, vous pouvez utiliser ","[",(0,i.kt)("inlineCode",{parentName:"p"},"debugDumpLayerTree()"),"]","(",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/"},"https://docs.flutter.io/flutter/")," rendering/debugDumpLayerTree.html). Pour l'exemple ci-dessus, il sortirait."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"I/flutter : TransformLayer\nI/flutter : \u2502 cr\xe9ateur : [root]\nI/flutter : \u2502 offset : Offset(0.0, 0.0)\nI/flutter : \u2502 transform :\nI/flutter : \u2502   [0] 3.5,0.0,0.0,0.0\nI/oscillation : \u2502   [1] 0.0,3.5,0.0,0.0\nI/oscillation : \u2502   [2] 0.0,0.0,1.0,0.0\nI/oscillation : \u2502   [3] 0.0,0.0,0.0,1.0\nI/oscillation : \u2502\nI / Flutter: \u251c\u2500Child 1: OffseStlayer\nI / Flutter: \u2502 \u2502 Cr\xe9ateur: Repeakboundary \u2190 \u2190 Focus- [Focus- [GlobalObjeKey MaterialPageroute (560156430)] \u2190 _Blylkey 328026813] \u2190 \u2190 Globalkey 388965355] \u2190 \u2190 \u2190 pile \u2190 Superposition-[GlobalKey 625702218] \u2190 Navigateur-[GlobalObjectKey _MaterialAppState(859106034)] \u2190 Titre \u2190 \u22ef\nI/scintillement : \u2502 \u2502 offset : Offset(0.0, 0.0)\nI/scintillement : \u2502 \u2502\nI/scintillement : \u2502 \u2514 enfant 1 : PictureLayer\nI/scintillement : \u2502\nI/scintillement : \u2514\u2500enfant 2 : PictureLayer\n")),(0,i.kt)("p",null,"Ceci est la sortie du ",(0,i.kt)("inlineCode",{parentName:"p"},"toStringDeep")," de la racine ",(0,i.kt)("inlineCode",{parentName:"p"},"Layer"),"."),(0,i.kt)("p",null,"La transformation racine est une transformation qui applique un ratio de pixels de p\xe9riph\xe9rique\xa0; dans ce cas, chaque pixel logique repr\xe9sente 3,5 pixels de p\xe9riph\xe9rique."),(0,i.kt)("p",null,"Le widget ",(0,i.kt)("inlineCode",{parentName:"p"},"RepaintBoundary")," cr\xe9e un ",(0,i.kt)("inlineCode",{parentName:"p"},"RenderRepaintBoundary")," dans la couche de l'arborescence de rendu. Ceci est utilis\xe9 pour r\xe9duire la quantit\xe9 de peinture n\xe9cessaire."),(0,i.kt)("h3",{id:"s\xe9mantique"},"S\xe9mantique"),(0,i.kt)("p",null,"Vous pouvez \xe9galement appeler ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering/debugDumpSemanticsTree.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugDumpSemanticsTree()"))," pour obtenir un vidage de l'arbre s\xe9mantique (l'arbre pr\xe9sent\xe9 \xe0 l'API d'accessibilit\xe9 du syst\xe8me). Pour utiliser cette fonction, vous devez d'abord activer les fonctions d'assistance, telles que l'activation de l'assistance syst\xe8me ou ",(0,i.kt)("inlineCode",{parentName:"p"},"SemanticsDebugger")," (voir ci-dessous)."),(0,i.kt)("p",null,"Pour l'exemple ci-dessus, il affichera :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'I/scintillement : SemanticsNode(0; Rect.fromLTRB(0.0, 0.0, 411.4, 683.4))\nI/scintillement : \u251cSemanticsNode(1; Rect.fromLTRB(0.0, 0.0, 411.4, 683.4))\nI/scintillement : \u2502 \u2514SemanticsNode(2; Rect.fromLTRB(0.0, 0.0, 411.4, 683.4); canBeTapped)\nI/flutter : \u2514SemanticsNode(3; Rect.fromLTRB(0.0, 0.0, 411.4, 683.4))\nI/flutter : \u2514SemanticsNode (4; Rect.fromLTRB(0.0, 0.0, 82.0, 36.0); canBeTapped; "Dump App")\n')),(0,i.kt)("h3",{id:"planification"},"Planification"),(0,i.kt)("p",null,"Pour savoir o\xf9 les \xe9v\xe9nements de d\xe9but/fin se produisent par rapport au cadre, vous pouvez basculer les valeurs bool\xe9ennes ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/scheduler/debugPrintBeginFrameBanner.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPrintBeginFrameBanner"))," et ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/scheduler/debugPrintEndFrameBanner.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPrintEndFrameBanner"))," pour imprimer le d\xe9but et la fin du cadre sur la console."),(0,i.kt)("p",null,"Exemple:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"I/flottement : \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 Image 12 30s 437.086ms \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\nI/flottement : Debug print : Est-ce que j'effectue ce travail plus d'une fois par image ?\nI/flutter\xa0: Impression de d\xe9bogage\xa0: Est-ce que j'effectue ce travail plus d'une fois par image\xa0?\nJe/scintillement : \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \u2580\u2580\u2580\u2580\u2580\u2580\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/scheduler/debugPrintScheduleFrameStacks.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPrintScheduleFrameStacks")),"Il peut \xe9galement \xeatre utilis\xe9 pour imprimer la pile d'appels qui a provoqu\xe9 la distribution de la trame actuelle."),(0,i.kt)("h3",{id:"d\xe9bogage-visuel"},"D\xe9bogage visuel"),(0,i.kt)("p",null,"Vous pouvez \xe9galement d\xe9boguer visuellement les probl\xe8mes de mise en page en d\xe9finissant ",(0,i.kt)("inlineCode",{parentName:"p"},"debugPaintSizeEnabled")," sur ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),". Il s'agit d'une valeur bool\xe9enne de la biblioth\xe8que ",(0,i.kt)("inlineCode",{parentName:"p"},"de rendu"),". Il peut \xeatre activ\xe9 \xe0 tout moment et affecte le dessin lorsqu'il est vrai. Le moyen le plus simple de le d\xe9finir est de le d\xe9finir en haut de ",(0,i.kt)("inlineCode",{parentName:"p"},"void main()"),"."),(0,i.kt)("p",null,"Lorsqu'il est activ\xe9, toutes les cases ont une bordure cyan fonc\xe9e brillante, le rembourrage (de widgets comme Padding) est affich\xe9 en bleu clair, les widgets enfants ont une bo\xeete bleu fonc\xe9 autour d'eux et l'alignement (de widgets comme Center et Align) est affich\xe9 comme une fl\xe8che jaune. Vide (par exemple Conteneur sans aucun n\u0153ud enfant) est affich\xe9 en gris."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering/debugPaintBaselinesEnabled.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPaintBaselinesEnabled"))," fait quelque chose de similaire, mais pour les objets avec des lignes de base, la ligne de base du texte est affich\xe9e en vert et les lignes de base id\xe9ographiques sont affich\xe9es en orange."),(0,i.kt)("p",null,"Le drapeau ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering/debugPaintPointersEnabled.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPaintPointersEnabled"))," active un mode sp\xe9cial o\xf9 tout objet sur lequel on clique est mis en surbrillance en cyan fonc\xe9. Cela peut vous aider \xe0 d\xe9terminer si un objet est test\xe9 de mani\xe8re incorrecte (Flutter d\xe9tecte si l'emplacement cliqu\xe9 a un widget qui r\xe9pond aux actions de l'utilisateur), par exemple, s'il est r\xe9ellement hors de port\xe9e de son \xe9l\xe9ment parent, il ne sera pas consid\xe9r\xe9 pour le test de r\xe9ussite en premier lieu."),(0,i.kt)("p",null,"Si vous essayez de d\xe9boguer un calque composite, par exemple pour d\xe9terminer si et o\xf9 ajouter un widget ",(0,i.kt)("inlineCode",{parentName:"p"},"RepaintBoundary")," , vous pouvez utiliser l'indicateur ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPaintLayerBordersEnabled"))," /debugPaintLayerBordersEnabled.html), qui marque les bordures de chaque calque avec une couleur orange ou la ligne d\xe9limit\xe9e, ou utilisez l'indicateur ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rending/debugRepaintRainbowEnabled.html"},(0,i.kt)("inlineCode",{parentName:"a"},"debugRepaintRainbowEnabled"))," chaque fois qu'ils se redessinent, ce qui entra\xeene la couverture du calque par un ensemble de couleurs en rotation."),(0,i.kt)("p",null,"Tous ces drapeaux ne fonctionnent qu'en mode d\xe9bogage. Normalement, tout ce qui dans le framework Flutter commence par `",(0,i.kt)("inlineCode",{parentName:"p"},"debug... "),"\" ne fonctionnera qu'en mode d\xe9bogage."),(0,i.kt)("h3",{id:"animations-de-d\xe9bogage"},"Animations de d\xe9bogage"),(0,i.kt)("p",null,"Le moyen le plus simple de d\xe9boguer les animations est de les ralentir. Pour ce faire, d\xe9finissez la variable ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/scheduler/timeDilation.html"},(0,i.kt)("inlineCode",{parentName:"a"},"timeDilation"))," (dans la biblioth\xe8que du planificateur) sur un nombre sup\xe9rieur \xe0 1,0, par exemple 50,0. Il est pr\xe9f\xe9rable de ne le d\xe9finir qu'une seule fois lorsque l'application d\xe9marre une fois. Si vous le modifiez \xe0 la vol\xe9e, et surtout si vous modifiez sa valeur \xe0 une valeur plus petite pendant que l'animation est en cours d'ex\xe9cution, vous pouvez obtenir des r\xe9gressions sur l'observation, ce qui peut entra\xeener des succ\xe8s d'assertion, et cela interf\xe8re g\xe9n\xe9ralement avec nos efforts de d\xe9veloppement."),(0,i.kt)("h3",{id:"d\xe9bogage-des-probl\xe8mes-de-performances"},"D\xe9bogage des probl\xe8mes de performances"),(0,i.kt)("p",null,"Pour comprendre ce qui cause la re-mise en page ou le re-dessin de votre application, vous pouvez d\xe9finir ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering/"},(0,i.kt)("inlineCode",{parentName:"a"},"debugPrintMarkNeedsLayoutStacks"))," s\xe9par\xe9ment debugPrintMarkNeedsLayoutStacks.html) et ","[",(0,i.kt)("inlineCode",{parentName:"p"},"debugPrintMarkNeedsPaintStacks"),"]","(",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.io/flutter/rendering/"},"https://docs.flutter.io/flutter/rendering/")," debugPrintMarkNeedsPaintStacks .html). Ceux-ci enregistrent la trace de la pile dans la console chaque fois que la bo\xeete de rendu est invit\xe9e \xe0 re-mise en page et \xe0 repeindre. Si cette m\xe9thode fonctionne pour vous, vous pouvez utiliser la m\xe9thode ",(0,i.kt)("inlineCode",{parentName:"p"},"debugPrintStack()")," dans la biblioth\xe8que ",(0,i.kt)("inlineCode",{parentName:"p"},"services")," pour imprimer la trace de la pile \xe0 la demande."),(0,i.kt)("h3",{id:"temps-de-d\xe9marrage-de-lapplication-statistique"},"Temps de d\xe9marrage de l'application statistique"),(0,i.kt)("p",null,"Pour recueillir des informations d\xe9taill\xe9es sur le temps n\xe9cessaire au d\xe9marrage d'une application Flutter, vous pouvez utiliser les options ",(0,i.kt)("inlineCode",{parentName:"p"},"trace-startup")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"profile")," lors de l'ex\xe9cution de ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter run"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"ex\xe9cution flottante --trace-startup --profile\n")),(0,i.kt)("p",null,"La sortie de trace est enregistr\xe9e sous ",(0,i.kt)("inlineCode",{parentName:"p"},"start_up_info.json")," dans le r\xe9pertoire du projet Flutter sous le r\xe9pertoire de construction. La sortie r\xe9pertorie le temps pass\xe9 entre le d\xe9marrage de l'application et ces \xe9v\xe9nements de trace (captur\xe9s en microsecondes)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"En entrant dans le moteur Flutter."),(0,i.kt)("li",{parentName:"ul"},"Lors de l'affichage de la premi\xe8re image de l'application."),(0,i.kt)("li",{parentName:"ul"},"Lors de l'initialisation du framework Flutter."),(0,i.kt)("li",{parentName:"ul"},"Lorsque vous avez termin\xe9 l'initialisation du framework Flutter.")),(0,i.kt)("p",null,"Comme :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "engineEnterTimestampMicros": 96025565262,\n  "timeToFirstFrameMicros": 2171978,\n  "timeToFrameworkInitMicros": 514585,\n  "timeAfterFrameworkInitMicros": 1657393\n}\n')),(0,i.kt)("h3",{id:"suivi-des-performances-du-code-dart"},"Suivi des performances du code Dart"),(0,i.kt)("p",null,"Pour effectuer une trace de performance personnalis\xe9e et mesurer le temps mur/CPU de n'importe quel segment de code de Dart (similaire \xe0 l'utilisation de ",(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/profile/systrace.html"},"systrace")," sur Android) Utilisez l'outil ",(0,i.kt)("inlineCode",{parentName:"p"},"dart:developer"),"s ",(0,i.kt)("a",{parentName:"p",href:"https://api.dartlang.org/stable/dart-developer/Timeline-class.html"},"Timeline")," pour inclure le bloc de code que vous souhaitez tester , par exemple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Timeline.startSync('fonction int\xe9ressante');\n// iWonderHowLongThisTakes();\nChronologie.finishSync();\n")),(0,i.kt)("p",null,'Ouvrez ensuite la page de chronologie de l\'Observatoire de votre application, cochez la case "Dart" dans "Flux enregistr\xe9s" et ex\xe9cutez la fonction que vous souhaitez mesurer.'),(0,i.kt)("p",null,"L'actualisation de la page affichera les enregistrements de la chronologie de l'application dans l'ordre chronologique dans les ",(0,i.kt)("a",{parentName:"p",href:"https://www.chromium.org/developers/how-tos/trace-event-profiling-tool"},"outils de suivi de Chrome"),"."),(0,i.kt)("p",null,"Assurez-vous d'ex\xe9cuter ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter run")," avec l'indicateur ",(0,i.kt)("inlineCode",{parentName:"p"},"-profile")," pour vous assurer que les caract\xe9ristiques de performance d'ex\xe9cution sont minimalement diff\xe9rentes de votre produit final."))}c.isMDXComponent=!0}}]);